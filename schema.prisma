datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id Int @id

  // Game Details
  name         String
  about        String
  detailedDesc String
  shortDesc    String
  reviews      String
  headerImg    String
  website      String
  supportURL   String
  supportEmail String
  price        Float
  releaseDate  DateTime
  requiredAge  Int
  dlcCount     Int
  achievements Int

  // Average Playtime
  avePlaytimeForever Int
  avePlaytime2Weeks  Int
  medPlaytimeForever Int
  medPlaytime2Weeks  Int

  // Metrics
  peakCCU         Int
  metacriticScore Int
  metacriticURL   String
  notes           String
  scoreRank       String
  positiveReviews Int
  negativeReviews Int
  estimatedOwners String
  reviewerCount   Int

  // Relations
  packages    Package[]
  screenshots Screenshot[]
  movies      Movie[]
  GameTag     GameTag[]

  GenreGroup       GenreGroup     @relation(fields: [genreGroupId], references: [genreGroupId])
  LanguageGroup    LanguageGroup  @relation(fields: [languageGroupId], references: [languageGroupId])
  DeveloperGroup   DeveloperGroup @relation(fields: [developerGroupId], references: [developerGroupId])
  PublisherGroup   PublisherGroup @relation(fields: [publisherGroupId], references: [publisherGroupId])
  CategoryGroup    CategoryGroup  @relation(fields: [categoryGroupId], references: [categoryGroupId])
  dimSupport       dimSupport     @relation(fields: [dimSupportId], references: [supportId])
  dimDate          dimDate        @relation(fields: [dimDateDate], references: [date])
  genreGroupId     Int
  languageGroupId  Int
  developerGroupId Int
  publisherGroupId Int
  categoryGroupId  Int
  dimSupportId     Int
  dimDateDate      DateTime
}

model TextLanguage {
  language        String
  groupId         Int
  languageGroupId LanguageGroup @relation(fields: [groupId], references: [languageGroupId])

  @@id([language, groupId])
}

model AudioLanguage {
  language        String
  groupId         Int
  languageGroupId LanguageGroup @relation(fields: [groupId], references: [languageGroupId])

  @@id([language, groupId])
}

model LanguageGroup {
  languageGroupId Int             @id
  game            Game[]
  TextLanguage    TextLanguage[]
  AudioLanguage   AudioLanguage[]
}

model Package {
  id          Int          @id @default(autoincrement())
  gameId      Int
  title       String
  description String?
  subs        PackageSub[]
  game        Game         @relation(fields: [gameId], references: [id])
}

model PackageSub {
  id          Int      @id @default(autoincrement())
  text        String
  description String
  price       Float
  Package     Package? @relation(fields: [packageId], references: [id])
  packageId   Int?
}

model Developer {
  name             String
  groupId          Int
  developerGroupId DeveloperGroup @relation(fields: [groupId], references: [developerGroupId])

  @@id([name, groupId])
}

model DeveloperGroup {
  developerGroupId Int         @id
  game             Game[]
  Developer        Developer[]
}

model Publisher {
  name             String
  groupId          Int
  publisherGroupId PublisherGroup @relation(fields: [groupId], references: [publisherGroupId])

  @@id([name, groupId])
}

model PublisherGroup {
  publisherGroupId Int         @id
  game             Game[]
  Publisher        Publisher[]
}

model Category {
  name            String
  groupId         Int
  categoryGroupId CategoryGroup @relation(fields: [groupId], references: [categoryGroupId])

  @@id([name, groupId])
}

model CategoryGroup {
  categoryGroupId Int        @id
  game            Game[]
  Category        Category[]
}

model Genre {
  genre        String
  groupId      Int
  genreGroupId GenreGroup @relation(fields: [groupId], references: [genreGroupId])

  @@id([genre, groupId])
}

model GenreGroup {
  genreGroupId Int     @id
  game         Game[]
  Genre        Genre[]
}

model Screenshot {
  url    String @id
  game   Game   @relation(fields: [gameId], references: [id])
  gameId Int
}

model Movie {
  url    String @id
  game   Game   @relation(fields: [gameId], references: [id])
  gameId Int
}

model Tag {
  name           String
  groupId        Int
  GameTagGroupId GameTag @relation(fields: [groupId], references: [tagGroupId])

  @@id([name, groupId])
}

model GameTag {
  tagGroupId Int    @id
  game       Game[]
  Tag        Tag[]
}

model dimSupport {
  supportId      Int     @id
  macSupport     Boolean
  windowsSupport Boolean
  linuxSupport   Boolean
  game           Game[]
}

model dimDate {
  date    DateTime @id
  quarter Int
  month   String
  year    Int
  Game    Game[]
}
